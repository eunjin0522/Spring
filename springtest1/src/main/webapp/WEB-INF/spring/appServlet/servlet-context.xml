<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- annotion을 인지하고 설정해주는 코드 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

<!-- 	<beans:bean id="testDto" class="kh.mclass.test1.sub.model.dto.TestDto"> 
		<beans:constructor-arg name="t2" value="생성자로 값넣기"></beans:constructor-arg>
		<beans:property name="t1" value="setter로 값 넣기"></beans:property>
		<beans:property name="testFileDto" ref="testFileDto"></beans:property>
	</beans:bean>
	
	<beans:bean id="testFileDto" class="kh.mclass.test1.sub.model.dto.TestFileDto">
		<beans:constructor-arg name="filePath" value="aaa.jsp"></beans:constructor-arg>
		<beans:constructor-arg name="fileType" value="jsp"></beans:constructor-arg>
	</beans:bean> -->
	<context:component-scan base-package="kh.mclass.test1" />
	<!-- 방법1 @Aspect AOP annotation 인식 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 방법2 @Aspect AOP annotation 인식 사용 안 함 -->
	
	<beans:bean class="kh.mclass.test1.common.LoginInterceptor" id="loginInterceptor"/>
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<!-- 제외할 것들 설정 -->
			<exclude-mapping path="/login"/>
			<exclude-mapping path="/join"/>
			<exclude-mapping path="/main"/>
			<!-- resources파일엔 이미지 jsp 등 정적 서비스를 제공하는 파일들이 있다. 반드시 설정해줘야한다! -->
			<exclude-mapping path="/resources/**"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
	</interceptors>
</beans:beans>


